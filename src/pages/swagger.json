{
    "openapi": "3.0.1",
    "info": {
      "title": "Crypto.CryptoProcessing.TechSupport.API_1.0",
      "version": "1.0"
    },
    "paths": {
      "/api/v1/blockchains": {
        "get": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[BlockchainDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на создание блокчейна"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на создание блокчейна"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на создание блокчейна"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на изменение блокчейна"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на изменение блокчейна"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBlockchain2"
                    }
                  ],
                  "description": "Модель запроса на изменение блокчейна"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/blockchains/list": {
        "get": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[BlockchainListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/blockchains/{entityId}": {
        "get": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[BlockchainDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/blockchains/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Blockchains"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/cacheInformation": {
        "get": {
          "tags": [
            "CacheInformation"
          ],
          "summary": "Возвращает список состояний сканирования сети",
          "parameters": [
            {
              "name": "transportCurrencyId",
              "in": "query",
              "description": "Идентификатор валюты на транспорте",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CacheInfo[]]"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CacheInfo[]]"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "CacheInformation"
          ],
          "summary": "Создает состояние сканирования сети",
          "requestBody": {
            "description": "Тело запроса",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на создание состояния сканирования сети."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на создание состояния сканирования сети."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на создание состояния сканирования сети."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CacheInfo]"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CacheInfo]"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "CacheInformation"
          ],
          "summary": "Редактирует состояние сканирования сети",
          "requestBody": {
            "description": "Тело запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на редактирование состояния сканирования сети."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на редактирование состояния сканирования сети."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCacheInfoRequest2"
                    }
                  ],
                  "description": "Запрос на редактирование состояния сканирования сети."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/notificationSettings": {
        "get": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[ClientNotificationAddressDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание адреса оповещения"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание адреса оповещения"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание адреса оповещения"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование адреса оповещения"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование адреса оповещения"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClientNotificationAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование адреса оповещения"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/notificationSettings/list": {
        "get": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/notificationSettings/{entityId}": {
        "get": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ClientNotificationAddressDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/notificationSettings/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "ClientNotificationAddresses"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/{organizationId}/clients": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить клиентов организации",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "description": "ID организации",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[ClientDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/{organizationId}/clients/list": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить краткий список клиентов организации",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "description": "ID организации",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ClientListDto[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/{organizationId}/clients/invalid": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить клиентов организации с невалидной подписью",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "description": "ID организации",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[ClientDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/onPaymentGateway": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Возвращает клиента на платежном шлюзе.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента.",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CoinGateClient]"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Clients"
          ],
          "summary": "Создает клиента на платежном шлюзе.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента.",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[ClientDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Clients"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClient2"
                    }
                  ],
                  "description": "Модель запроса на создание клиента"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClient2"
                    }
                  ],
                  "description": "Модель запроса на создание клиента"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateClient2"
                    }
                  ],
                  "description": "Модель запроса на создание клиента"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Clients"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClient2"
                    }
                  ],
                  "description": "Модель запроса на редактирование клиента"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClient2"
                    }
                  ],
                  "description": "Модель запроса на редактирование клиента"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditClient2"
                    }
                  ],
                  "description": "Модель запроса на редактирование клиента"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/list": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ClientListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/{entityId}": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ClientDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Clients"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/clients/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Clients"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/contours/base/{instrumentId}": {
        "get": {
          "tags": [
            "Contours"
          ],
          "summary": "Возвращает базовый контур.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "path",
              "description": "ID инструмента.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WalletContourDtos+ContourAccountDto[]]"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WalletContourDtos+ContourAccountDto[]]"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Contours"
          ],
          "summary": "Создает базовый контур.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "path",
              "description": "ID инструмента.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/contours/dependentCurrencies/{instrumentId}": {
        "get": {
          "tags": [
            "Contours"
          ],
          "summary": "Возвращает валюты, связанные с контуром.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "path",
              "description": "ID инструмента.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/contours/executeImmediateWalletContourMigration": {
        "post": {
          "tags": [
            "Contours"
          ],
          "summary": "Выполнить немедленную смену базового контура.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента.",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/currencies": {
        "get": {
          "tags": [
            "Currencies"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[CurrencyDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Currencies"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание валюты"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание валюты"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание валюты"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Currencies"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCurrency2"
                    }
                  ],
                  "description": "Модель запроса на редактирование валюты"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCurrency2"
                    }
                  ],
                  "description": "Модель запроса на редактирование валюты"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditCurrency2"
                    }
                  ],
                  "description": "Модель запроса на редактирование валюты"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/currencies/list": {
        "get": {
          "tags": [
            "Currencies"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/currencies/{entityId}": {
        "get": {
          "tags": [
            "Currencies"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[CurrencyDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Currencies"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/currencies/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Currencies"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/сurrencyTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/clientNotificationTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/notificationChannels": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/tariffStatuses": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/twoFactorChannels": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/entityTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/operationTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/operationOwnerTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/serviceOperationTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/refundTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/systemNotificationTypes": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/transactionAgentStatus": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/transactionAmlRiskGrades": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/transactionApproaches": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/transactionBalanceStatuses": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/transactionCoinGatewayStatus": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/enums/withdrawalCreatorType": {
        "get": {
          "tags": [
            "Enums"
          ],
          "summary": "Получить карту энумирации",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[EnumEntry[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/infoBackupSettings": {
        "get": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[InfoBackupSettingDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса создания настроек бэкапа"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса создания настроек бэкапа"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса создания настроек бэкапа"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса редактирования настроек бэкапа"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса редактирования настроек бэкапа"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditBackupSetting2"
                    }
                  ],
                  "description": "Модель запроса редактирования настроек бэкапа"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/infoBackupSettings/list": {
        "get": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/infoBackupSettings/{entityId}": {
        "get": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[InfoBackupSettingDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/infoBackupSettings/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "InfoBackupSettings"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/client/{clientId}": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить инструменты клиента",
          "parameters": [
            {
              "name": "clientId",
              "in": "path",
              "description": "ID клиента",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[InstrumentDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/{clientId}/list": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить краткий список инструментов клиента",
          "parameters": [
            {
              "name": "clientId",
              "in": "path",
              "description": "ID клиента",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[InstrumentListDto[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/requisites/{instrumentId}": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить реквизиты инструмента",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "path",
              "description": "ID инструмента",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[RequisiteResponse]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/onPaymentGateway": {
        "post": {
          "tags": [
            "Instruments"
          ],
          "summary": "Создает инструмент на платежном шлюзе.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента.",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[InstrumentDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Instruments"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateInstrument2"
                    }
                  ],
                  "description": "Модель запроса на создание инструмента"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateInstrument2"
                    }
                  ],
                  "description": "Модель запроса на создание инструмента"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateInstrument2"
                    }
                  ],
                  "description": "Модель запроса на создание инструмента"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Instruments"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditInstrument2"
                    }
                  ],
                  "description": "Модель запроса на редактирование инструмента"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditInstrument2"
                    }
                  ],
                  "description": "Модель запроса на редактирование инструмента"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditInstrument2"
                    }
                  ],
                  "description": "Модель запроса на редактирование инструмента"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/list": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[InstrumentListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/{entityId}": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[InstrumentDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Instruments"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/instruments/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Instruments"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/operationRestrictions/{instrumentId}": {
        "get": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Получить ограничения по инструменту",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "path",
              "description": "ID инструмента",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "operationType",
              "in": "query",
              "description": "Тип операции",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OperationType2"
                  }
                ],
                "description": "Тип операции"
              }
            },
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[OperationRestrictionDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/operationRestrictions": {
        "get": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[OperationRestrictionDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOperationRestriction2"
                    }
                  ],
                  "description": "Модель запроса на создание ограничения для операции"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOperationRestriction2"
                    }
                  ],
                  "description": "Модель запроса на создание ограничения для операции"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOperationRestriction2"
                    }
                  ],
                  "description": "Модель запроса на создание ограничения для операции"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/operationRestrictions/list": {
        "get": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/operationRestrictions/{entityId}": {
        "get": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[OperationRestrictionDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/operationRestrictions/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "OperationRestrictions"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations": {
        "get": {
          "tags": [
            "Organizations"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[OrganizationDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Organizations"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOrganization2"
                    }
                  ],
                  "description": "Модель запроса на создание организации"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOrganization2"
                    }
                  ],
                  "description": "Модель запроса на создание организации"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateOrganization2"
                    }
                  ],
                  "description": "Модель запроса на создание организации"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Organizations"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditOrganization2"
                    }
                  ],
                  "description": "Модель запроса на редактирование организации"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditOrganization2"
                    }
                  ],
                  "description": "Модель запроса на редактирование организации"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditOrganization2"
                    }
                  ],
                  "description": "Модель запроса на редактирование организации"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/list": {
        "get": {
          "tags": [
            "Organizations"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/{entityId}": {
        "get": {
          "tags": [
            "Organizations"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[OrganizationDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Organizations"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/organizations/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Organizations"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/approve/{refundId}": {
        "post": {
          "tags": [
            "Refunds"
          ],
          "summary": "Подтвердить рефанд",
          "parameters": [
            {
              "name": "refundId",
              "in": "path",
              "description": "ID рефанда",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/reject/{refundId}": {
        "post": {
          "tags": [
            "Refunds"
          ],
          "summary": "Отклонить рефанд",
          "parameters": [
            {
              "name": "refundId",
              "in": "path",
              "description": "ID рефанда",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/supportedCurrencies": {
        "post": {
          "tags": [
            "Refunds"
          ],
          "summary": "Создать рефанд для поддерживаемой валюты",
          "requestBody": {
            "description": "Запрос на создание рефанда",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundSupportedCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для поддерживаемой валюты"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundSupportedCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для поддерживаемой валюты"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundSupportedCurrency2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для поддерживаемой валюты"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[Nullable[UInt64]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/unsupportedTokens": {
        "post": {
          "tags": [
            "Refunds"
          ],
          "summary": "Создать рефанд для неподдерживаемого токена",
          "requestBody": {
            "description": "Запрос на создание рефанда",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundUnsupportedToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для неподдерживаемого токена"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundUnsupportedToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для неподдерживаемого токена"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundUnsupportedToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанда для неподдерживаемого токена"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[Nullable[UInt64]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds": {
        "get": {
          "tags": [
            "Refunds"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[RefundDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Refunds"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Refunds"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/list": {
        "get": {
          "tags": [
            "Refunds"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/{entityId}": {
        "get": {
          "tags": [
            "Refunds"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[RefundDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Refunds"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Refunds"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/tokens": {
        "get": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[RefundTokenDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанд токена"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанд токена"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на создание рефанд токена"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на редактирование рефанд токена"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на редактирование рефанд токена"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditRefundToken2"
                    }
                  ],
                  "description": "Модель запроса на редактирование рефанд токена"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/tokens/list": {
        "get": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/tokens/{entityId}": {
        "get": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[RefundTokenDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/refunds/tokens/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "RefundTokens"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/approve/{depositId}": {
        "post": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Подтвердить подозрительный депозит",
          "parameters": [
            {
              "name": "depositId",
              "in": "path",
              "description": "ID депозита",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/reject/{depositId}": {
        "post": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Отклонить подозрительный депозит",
          "parameters": [
            {
              "name": "depositId",
              "in": "path",
              "description": "ID депозита",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/forRefund": {
        "get": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Получить список подозрительных депозитов, доступных для вывода",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[DepositDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm": {
        "get": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[DepositDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditDeposit2"
                    }
                  ],
                  "description": "Модель запроса на редактирование депозита"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditDeposit2"
                    }
                  ],
                  "description": "Модель запроса на редактирование депозита"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditDeposit2"
                    }
                  ],
                  "description": "Модель запроса на редактирование депозита"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/list": {
        "get": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/{entityId}": {
        "get": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[DepositDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/deposits/waitConfirm/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "SuspiciousDeposits"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm/approve/{withdrawalId}": {
        "post": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Подтвердить подозрительный вывод",
          "parameters": [
            {
              "name": "withdrawalId",
              "in": "path",
              "description": "ID вывода",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm/reject/{withdrawalId}": {
        "post": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Отклонить подозрительный вывод",
          "parameters": [
            {
              "name": "withdrawalId",
              "in": "path",
              "description": "ID вывода",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/byHash": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Возвращает вывод по его инструменту и хешу.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "foreignId",
              "in": "query",
              "description": "Хеш вывода.",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WithdrawalDto]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/byAddress": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Возвращает вывод по его инструменту и адресу получателя.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "address",
              "in": "query",
              "description": "Адрес получателя.",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WithdrawalDto]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/byForeignId": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Возвращает вывод по его инструменту и внешнему ID.",
          "parameters": [
            {
              "name": "instrumentId",
              "in": "query",
              "description": "ID инструмента",
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "foreignId",
              "in": "query",
              "description": "Внешний ID.",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WithdrawalDto]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[WithdrawalDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditWithdrawal2"
                    }
                  ],
                  "description": "Модель запроса на редактирование вывода"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditWithdrawal2"
                    }
                  ],
                  "description": "Модель запроса на редактирование вывода"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditWithdrawal2"
                    }
                  ],
                  "description": "Модель запроса на редактирование вывода"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm/list": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm/{entityId}": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WithdrawalDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/withdrawals/waitConfirm/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "SuspiciousWithdrawals"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemNotificationSettings": {
        "get": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[SystemNotificationSettingDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на создание настройки системной нотификации"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на создание настройки системной нотификации"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на создание настройки системной нотификации"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на редактирование настройки системной нотификации"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на редактирование настройки системной нотификации"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemNotificationSetting2"
                    }
                  ],
                  "description": "Модель запроса на редактирование настройки системной нотификации"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemNotificationSettings/list": {
        "get": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemNotificationSettings/{entityId}": {
        "get": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[SystemNotificationSettingDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemNotificationSettings/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "SystemNotificationSettings"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemSettings": {
        "get": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[SystemSettingDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NotImplementedRequest2"
                    }
                  ],
                  "description": "Запрос не имплементирован. Вызов приведет к ошибке."
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemSettings2"
                    }
                  ],
                  "description": "Модель запроса на изменение системной настройки"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemSettings2"
                    }
                  ],
                  "description": "Модель запроса на изменение системной настройки"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditSystemSettings2"
                    }
                  ],
                  "description": "Модель запроса на изменение системной настройки"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemSettings/list": {
        "get": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemSettings/{entityId}": {
        "get": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[SystemSettingDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/systemSettings/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "SystemSettings"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/tariffs/{status}": {
        "get": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Получить список тарифов со статусом",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "status",
              "in": "path",
              "description": "Статус тарифа",
              "required": true,
              "style": "simple",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TariffStatus2"
                  }
                ],
                "description": "Статус тарифа"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[TariffDto]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/tariffs": {
        "get": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[TariffDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTariff2"
                    }
                  ],
                  "description": "Модель запроса на создание тарифа"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTariff2"
                    }
                  ],
                  "description": "Модель запроса на создание тарифа"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTariff2"
                    }
                  ],
                  "description": "Модель запроса на создание тарифа"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTariff2"
                    }
                  ],
                  "description": "Модель запроса на изменение тарифа"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTariff2"
                    }
                  ],
                  "description": "Модель запроса на изменение тарифа"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTariff2"
                    }
                  ],
                  "description": "Модель запроса на изменение тарифа"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/tariffs/list": {
        "get": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/tariffs/{entityId}": {
        "get": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[TariffDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/tariffs/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "Tariffs"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportCurrencies": {
        "get": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[TransportCurrencyDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportCurrency2"
                    }
                  ],
                  "description": "Запрос на создание транспортной валюты"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportCurrency2"
                    }
                  ],
                  "description": "Запрос на создание транспортной валюты"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportCurrency2"
                    }
                  ],
                  "description": "Запрос на создание транспортной валюты"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportCurrency2"
                    }
                  ],
                  "description": "Модель запроса на изменение транспортной валюты"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportCurrency2"
                    }
                  ],
                  "description": "Модель запроса на изменение транспортной валюты"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportCurrency2"
                    }
                  ],
                  "description": "Модель запроса на изменение транспортной валюты"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportCurrencies/list": {
        "get": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[TransportCurrencyListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportCurrencies/{entityId}": {
        "get": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[TransportCurrencyDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportCurrencies/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "TransportCurrencies"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportProtocols": {
        "get": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[TransportProtocolDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportProtocol2"
                    }
                  ],
                  "description": "Модель запроса на создание транспортного протокола"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportProtocol2"
                    }
                  ],
                  "description": "Модель запроса на создание транспортного протокола"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateTransportProtocol2"
                    }
                  ],
                  "description": "Модель запроса на создание транспортного протокола"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportProtocol2"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportProtocol2"
                    }
                  ]
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditTransportProtocol2"
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportProtocols/list": {
        "get": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportProtocols/{entityId}": {
        "get": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[TransportProtocolDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/transportProtocols/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "TransportProtocols"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/stopAddresses": {
        "get": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Получить список сущностей, постранично",
          "parameters": [
            {
              "name": "Offset",
              "in": "query",
              "description": "Сдвиг",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "Limit",
              "in": "query",
              "description": "Лимит",
              "required": true,
              "style": "form",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "SortBy",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "SortType",
              "in": "query",
              "style": "form",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortType2"
                  }
                ]
              }
            },
            {
              "name": "Filter",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[PagedResult[WithdrawalStopAddressDto]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Создать сущность",
          "requestBody": {
            "description": "Запрос на создание сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание стоп-адреса"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание стоп-адреса"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на создание стоп-адреса"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[UInt64]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Изменить сущность",
          "requestBody": {
            "description": "Запрос на изменение сущности",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование стоп-адреса"
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование стоп-адреса"
                }
              },
              "application/*+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EditStopAddress2"
                    }
                  ],
                  "description": "Модель запроса на редактирование стоп-адреса"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/stopAddresses/list": {
        "get": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Получить краткий список сущностей",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[ListDto[]]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/stopAddresses/{entityId}": {
        "get": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Получить сущность по ID",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[WithdrawalStopAddressDto]"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Удалить сущность",
          "parameters": [
            {
              "name": "entityId",
              "in": "path",
              "description": "ID сущности",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "422": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "451": {
              "description": "Client Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse2"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/stopAddresses/reflection/sortable-filterable": {
        "get": {
          "tags": [
            "WithdrawalStopAddresses"
          ],
          "summary": "Получить список сортируемых, фильтруемых полей.",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BaseResponse[String[]]"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AntifraudInfoDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "amlRiskGrade": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAmlRiskGrade2"
                }
              ],
              "description": "Степень риска транзакции"
            },
            "blacklist": {
              "type": "boolean",
              "description": "Признак чёрного списка"
            },
            "whitelist": {
              "type": "boolean",
              "description": "Признак белого списка"
            },
            "description": {
              "type": "string",
              "description": "Комментарий, полученный от аналитических ресурсов",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Антифрод информация операций"
        },
        "BaseResponse2": {
          "type": "object",
          "properties": {
            "isSuccessful": {
              "type": "boolean",
              "description": "Флаг успеха запроса. Равен true если Crypto.CryptoProcessing.Common.DataContracts.BaseResponse.Error отсутствует.",
              "readOnly": true
            },
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ"
        },
        "BaseResponse[BlockchainDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BlockchainDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[BlockchainListDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlockchainListDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[CacheInfo[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CacheInfo2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[CacheInfo]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CacheInfo2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[ClientDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ClientDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[ClientListDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClientListDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[ClientNotificationAddressDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ClientNotificationAddressDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[CoinGateClient]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CoinGateClient2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[CurrencyDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[DepositDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DepositDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[EnumEntry[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EnumEntry2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[InfoBackupSettingDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InfoBackupSettingDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[InstrumentDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InstrumentDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[InstrumentListDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InstrumentListDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[ListDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ListDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[Nullable[UInt64]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "integer",
              "description": "Объект с данными",
              "format": "int64",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[OperationRestrictionDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationRestrictionDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[OrganizationDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OrganizationDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[BlockchainDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[BlockchainDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[ClientDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[ClientDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[ClientNotificationAddressDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[ClientNotificationAddressDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[CurrencyDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[CurrencyDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[DepositDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[DepositDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[InfoBackupSettingDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[InfoBackupSettingDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[InstrumentDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[InstrumentDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[OperationRestrictionDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[OperationRestrictionDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[OrganizationDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[OrganizationDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[RefundDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[RefundDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[RefundTokenDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[RefundTokenDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[SystemNotificationSettingDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[SystemNotificationSettingDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[SystemSettingDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[SystemSettingDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[TariffDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[TariffDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[TransportCurrencyDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[TransportCurrencyDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[TransportProtocolDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[TransportProtocolDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[WithdrawalDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[WithdrawalDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[PagedResult[WithdrawalStopAddressDto]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PagedResult[WithdrawalStopAddressDto]"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[RefundDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RefundDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[RefundTokenDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RefundTokenDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[RequisiteResponse]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RequisiteResponse2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[String[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[SystemNotificationSettingDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemNotificationSettingDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[SystemSettingDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemSettingDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[TData]": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseResponse2"
            }
          ],
          "properties": {
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TData2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[TariffDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TariffDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[TransportCurrencyDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransportCurrencyDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[TransportCurrencyListDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransportCurrencyListDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[TransportProtocolDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransportProtocolDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[UInt64]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "integer",
              "description": "Объект с данными",
              "format": "int64"
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[WalletContourDtos+ContourAccountDto[]]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ContourAccountDto2"
              },
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[WithdrawalDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WithdrawalDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseResponse[WithdrawalStopAddressDto]": {
          "type": "object",
          "properties": {
            "error": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error2"
                }
              ],
              "description": "Ошибка.",
              "nullable": true
            },
            "isSuccessful": {
              "type": "boolean",
              "readOnly": true
            },
            "data": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WithdrawalStopAddressDto2"
                }
              ],
              "description": "Объект с данными",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Базовый ответ, содержащий полезную информацию"
        },
        "BaseSignedDto2": {
          "type": "object",
          "properties": {
            "isValid": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "BlockchainDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платежной системы",
              "format": "int64"
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование",
              "nullable": true
            },
            "blockchainCurrencyId": {
              "type": "integer",
              "description": "Идентификатор базовой валюты блокчейна",
              "format": "int64"
            },
            "blockchainCurrencyName": {
              "type": "string",
              "description": "Полное имя валюты",
              "nullable": true
            },
            "coinServiceId": {
              "type": "integer",
              "description": "Идентификатор сервиса платёжного шлюза монеты",
              "format": "int64"
            },
            "coinServiceName": {
              "type": "string",
              "description": "Имя сервиса, чтобы не путаться",
              "nullable": true
            },
            "coinServiceProcessingUrl": {
              "type": "string",
              "description": "URL эндпоинта с общими методами сервиса (выдача депозитных реквизитов)",
              "nullable": true
            },
            "coinServiceAdministrationUrl": {
              "type": "string",
              "description": "URL эндпоинта с административными методами сервиса",
              "nullable": true
            },
            "coinServiceBaseContourUrl": {
              "type": "string",
              "description": "URL эндпойнта с базовыми контурами",
              "nullable": true
            },
            "coinServiceDepositContourUrl": {
              "type": "string",
              "description": "URL эндпойнта с депозитными контурами",
              "nullable": true
            },
            "coinServiceCacheInformationUrl": {
              "type": "string",
              "description": "URL эндпойнта с информацией о кеше",
              "nullable": true
            },
            "confirmations": {
              "type": "integer",
              "description": "Требуемое количество конфирмаций любой валюты, работающей на данном блокчейне",
              "format": "int32"
            },
            "dtLastBlock": {
              "type": "string",
              "description": "Дата последнего засинхронизированного блока в блокчейне",
              "format": "date-time",
              "nullable": true
            },
            "explorerTxInfoUrl": {
              "type": "string",
              "nullable": true
            },
            "explorerTxByAddressUrl": {
              "type": "string",
              "nullable": true
            },
            "height": {
              "type": "integer",
              "description": "Высота блокчейна",
              "format": "int64",
              "nullable": true
            },
            "nodeConnections": {
              "type": "integer",
              "description": "Количество активных соединений ноды/кошелька данного блокчейна",
              "format": "int32",
              "nullable": true
            },
            "nodeVersion": {
              "type": "string",
              "description": "Версия кошелька/ноды",
              "nullable": true
            },
            "nodeStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BlockchainNodeStatus2"
                }
              ],
              "description": "Статус ноды блокчейна"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Данные блокчейнов"
        },
        "BlockchainListDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/ListDto2"
            }
          ],
          "properties": {
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платежной системы.",
              "format": "int64"
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование платежной системы",
              "nullable": true
            },
            "blockchainCurrencyName": {
              "type": "string",
              "description": "Наименование валюты на блокчейне",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Краткая модель сущности"
        },
        "BlockchainNodeStatus2": {
          "enum": [
            "Undefined",
            "Synchronized",
            "NonSynchronized"
          ],
          "type": "string",
          "description": "Статус ноды блокчейна"
        },
        "BusinessCheckDto2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BusinessCheckStatus2"
                }
              ],
              "description": "Статус бизнес-проверки"
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BusinessCheckType2"
                }
              ],
              "description": "Тип бизнес-проверки"
            }
          },
          "additionalProperties": false
        },
        "BusinessCheckStatus2": {
          "enum": [
            "Pending",
            "Success",
            "Failed",
            "WrongSignature"
          ],
          "type": "string",
          "description": "Статус бизнес-проверки"
        },
        "BusinessCheckType2": {
          "enum": [
            "WithdrawalLimits",
            "WithdrawalAntifraud",
            "DepositLimit",
            "DepositAntifraud"
          ],
          "type": "string",
          "description": "Тип бизнес-проверки"
        },
        "CacheInfo2": {
          "type": "object",
          "properties": {
            "assetId": {
              "type": "string",
              "nullable": true
            },
            "lastSyncedBlockIndex": {
              "type": "integer",
              "format": "int64"
            },
            "iterationDelay": {
              "type": "string",
              "format": "[-][d.]hh:mm:ss"
            },
            "failedDelay": {
              "type": "string",
              "format": "[-][d.]hh:mm:ss"
            },
            "blockPool": {
              "type": "integer",
              "format": "int32"
            },
            "enabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "ClientDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "organizationId": {
              "type": "integer",
              "description": "Идентификатор организации",
              "format": "int64"
            },
            "organizationName": {
              "type": "string",
              "description": "Наименование организации",
              "nullable": true
            },
            "organizationIsBlocked": {
              "type": "boolean"
            },
            "name": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "clientKey": {
              "type": "string",
              "description": "Уникальный ключ клиента",
              "nullable": true
            },
            "tariffId": {
              "type": "integer",
              "description": "Идентификатор тарифа",
              "format": "int64"
            },
            "tariffName": {
              "type": "string",
              "description": "Наименование тарифа",
              "nullable": true
            },
            "isBlocked": {
              "type": "boolean",
              "description": "Флаг блокировки клиента"
            },
            "description": {
              "type": "string",
              "description": "Необязательное описание",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные клиента"
        },
        "ClientListDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/ListDto2"
            }
          ],
          "properties": {
            "clientKey": {
              "type": "string",
              "description": "Уникальный ключ клиента",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Краткая модель сущности"
        },
        "ClientNotificationAddressDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64"
            },
            "address": {
              "type": "string",
              "description": "Адрес нотификации",
              "nullable": true
            },
            "notificationChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationChannel2"
                }
              ],
              "description": "Канал уведомления"
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationType2"
                }
              ],
              "description": "Тип уведомления"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные адреса отправки конкретного уведомления по конкретному каналу для клиента"
        },
        "CoinGateClient2": {
          "type": "object",
          "properties": {
            "internalId": {
              "type": "integer",
              "format": "int32"
            },
            "clientKey": {
              "type": "string",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "nullable": true
            },
            "activated": {
              "type": "boolean"
            },
            "clientCurrencies": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CoinGateClientCurrency2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CoinGateClientCurrency2": {
          "type": "object",
          "properties": {
            "coin": {
              "type": "string",
              "nullable": true
            },
            "transport": {
              "type": "string",
              "nullable": true
            },
            "activated": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "ContourAccountDto2": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "nullable": true
            },
            "mode": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ContourMode2"
                }
              ]
            },
            "dtCreated": {
              "type": "string",
              "format": "date-time"
            },
            "minHarvestAmount": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "minHarvestPeriod": {
              "type": "string",
              "format": "[-][d.]hh:mm:ss",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ContourMode2": {
          "enum": [
            "AwaitingActivation",
            "Active",
            "Hacked",
            "Harvest",
            "WrongSignature",
            "Ignore"
          ],
          "type": "string"
        },
        "CreateBackupSetting2": {
          "required": [
            "clientId",
            "currencyId",
            "fileNamePrefix",
            "maximumDelayInHours",
            "paymentSystemId",
            "storageContainerName",
            "transportProtocolId"
          ],
          "type": "object",
          "properties": {
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64"
            },
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64"
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64"
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платёжной системы",
              "format": "int64"
            },
            "fileNamePrefix": {
              "minLength": 1,
              "type": "string",
              "description": "Префикс в наименовании файла"
            },
            "maximumDelayInHours": {
              "type": "integer",
              "description": "Максимальная задержка в часах",
              "format": "int32"
            },
            "storageContainerName": {
              "minLength": 1,
              "type": "string",
              "description": "Наименование хранилища"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса создания настроек бэкапа"
        },
        "CreateBlockchain2": {
          "required": [
            "blockchainCurrencyId",
            "coinServiceAdministrationUrl",
            "coinServiceBaseContourUrl",
            "coinServiceCacheInformationUrl",
            "coinServiceDepositContourUrl",
            "coinServiceName",
            "coinServiceProcessingUrl",
            "confirmations",
            "explorerTxByAddressUrl",
            "explorerTxInfoUrl",
            "paymentSystemName"
          ],
          "type": "object",
          "properties": {
            "coinServiceName": {
              "minLength": 1,
              "type": "string",
              "description": "Имя сервиса, чтобы не путаться"
            },
            "paymentSystemName": {
              "minLength": 1,
              "type": "string",
              "description": "Наименование"
            },
            "blockchainCurrencyId": {
              "type": "integer",
              "description": "Идентификатор базовой валюты блокчейна",
              "format": "int64"
            },
            "confirmations": {
              "type": "integer",
              "description": "Требуемое количество конфирмаций любой валюты, работающей на данном блокчейне",
              "format": "int32"
            },
            "explorerTxInfoUrl": {
              "minLength": 1,
              "type": "string"
            },
            "explorerTxByAddressUrl": {
              "minLength": 1,
              "type": "string"
            },
            "coinServiceProcessingUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпоинта с общими методами сервиса (выдача депозитных реквизитов)"
            },
            "coinServiceAdministrationUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпоинта с административными методами сервиса"
            },
            "coinServiceBaseContourUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с базовыми контурами"
            },
            "coinServiceDepositContourUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с депозитными контурами"
            },
            "coinServiceCacheInformationUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с информацией о кеше"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание блокчейна"
        },
        "CreateCacheInfoRequest2": {
          "required": [
            "assetId",
            "blockPool",
            "failedDelay",
            "iterationDelay",
            "lastSyncedBlockIndex",
            "transportCurrencyId"
          ],
          "type": "object",
          "properties": {
            "transportCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты на транспорте",
              "format": "int64"
            },
            "assetId": {
              "minLength": 1,
              "type": "string",
              "description": "Идентификатор состояния сканирования сети"
            },
            "lastSyncedBlockIndex": {
              "type": "integer",
              "description": "Индекс последнего просканированного блока",
              "format": "int64"
            },
            "iterationDelay": {
              "type": "string",
              "description": "Период сканирования",
              "format": "[-][d.]hh:mm:ss"
            },
            "failedDelay": {
              "type": "string",
              "description": "Период задержки при ошибке",
              "format": "[-][d.]hh:mm:ss"
            },
            "blockPool": {
              "type": "integer",
              "description": "Число блоков, обрабатываемых за одну итерацию сканирования",
              "format": "int32"
            }
          },
          "additionalProperties": false,
          "description": "Запрос на создание состояния сканирования сети."
        },
        "CreateClient2": {
          "required": [
            "name",
            "organizationId",
            "tariffId"
          ],
          "type": "object",
          "properties": {
            "organizationId": {
              "type": "integer",
              "description": "Идентификатор организации",
              "format": "int64"
            },
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Имя клиента"
            },
            "description": {
              "type": "string",
              "description": "Необязательное описание",
              "nullable": true
            },
            "tariffId": {
              "type": "integer",
              "description": "Идентификатор тарифа",
              "format": "int64"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание клиента"
        },
        "CreateClientNotificationAddress2": {
          "required": [
            "address",
            "clientId",
            "notificationChannel",
            "notificationType"
          ],
          "type": "object",
          "properties": {
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64"
            },
            "address": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес нотификации"
            },
            "notificationChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationChannel2"
                }
              ],
              "description": "Канал уведомления"
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationType2"
                }
              ],
              "description": "Тип уведомления"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание адреса оповещения"
        },
        "CreateCurrency2": {
          "required": [
            "fullName",
            "shortName",
            "type"
          ],
          "type": "object",
          "properties": {
            "shortName": {
              "minLength": 1,
              "type": "string",
              "description": "Короткое имя валюты"
            },
            "fullName": {
              "minLength": 1,
              "type": "string",
              "description": "Полное имя валюты"
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyType2"
                }
              ],
              "description": "Тип валюты"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание валюты"
        },
        "CreateInstrument2": {
          "required": [
            "availableForClient",
            "clientId",
            "commercialFeeCurrencyId",
            "hiddenForClient",
            "technicalFeeCurrencyId",
            "transportCurrencyId"
          ],
          "type": "object",
          "properties": {
            "transportCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты на транспорте",
              "format": "int64"
            },
            "clientId": {
              "type": "integer",
              "format": "int64"
            },
            "commercialFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания коммерческой комиссии по инструменту",
              "format": "int64"
            },
            "technicalFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания технической комиссии по инструменту",
              "format": "int64"
            },
            "hiddenForClient": {
              "type": "boolean",
              "description": "Скрыт для отображения в интерфейсе для клиента"
            },
            "availableForClient": {
              "type": "boolean",
              "description": "Доступен для клиента"
            },
            "systemIdentifierValue": {
              "type": "string",
              "nullable": true
            },
            "systemIdentifierСomment": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание инструмента"
        },
        "CreateOperationRestriction2": {
          "required": [
            "entity",
            "entityId",
            "operation",
            "owner",
            "reason",
            "subType"
          ],
          "type": "object",
          "properties": {
            "entity": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EntityType2"
                }
              ],
              "description": "Тип сущности"
            },
            "entityId": {
              "type": "integer",
              "description": "Идентификатор экземпляра сущности",
              "format": "int64"
            },
            "operation": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationType2"
                }
              ],
              "description": "Тип операции"
            },
            "owner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Принадлежность операции"
            },
            "subType": {
              "type": "integer",
              "description": "Подтип операции",
              "format": "int32"
            },
            "reason": {
              "minLength": 1,
              "type": "string",
              "description": "Основание для ограничения"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание ограничения для операции"
        },
        "CreateOrganization2": {
          "required": [
            "name",
            "twoFactorChannel"
          ],
          "type": "object",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Наименование организации"
            },
            "twoFactorChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TwoFactorChannel2"
                }
              ],
              "description": "Канал двухфакторной аутентификации"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание организации"
        },
        "CreateRefundSupportedCurrency2": {
          "required": [
            "address",
            "depositIds",
            "instrumentId"
          ],
          "type": "object",
          "properties": {
            "instrumentId": {
              "type": "integer",
              "format": "int64"
            },
            "address": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес рефанда"
            },
            "depositIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "Идентификаторы депозитов"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание рефанда для поддерживаемой валюты"
        },
        "CreateRefundToken2": {
          "required": [
            "contract",
            "precision",
            "transportProtocolId"
          ],
          "type": "object",
          "properties": {
            "contract": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес смарт-контракта"
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32"
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание рефанд токена"
        },
        "CreateRefundUnsupportedToken2": {
          "required": [
            "address",
            "amount",
            "clientId",
            "depositAddress",
            "refundTokenId"
          ],
          "type": "object",
          "properties": {
            "address": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес рефанда"
            },
            "refundTokenId": {
              "type": "integer",
              "format": "int64"
            },
            "clientId": {
              "type": "integer",
              "format": "int64"
            },
            "amount": {
              "type": "number",
              "format": "decimal"
            },
            "depositAddress": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес депозита для рефанда"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание рефанда для неподдерживаемого токена"
        },
        "CreateStopAddress2": {
          "required": [
            "address",
            "clientId",
            "paymentSystemId"
          ],
          "type": "object",
          "properties": {
            "address": {
              "minLength": 1,
              "type": "string",
              "description": "Адрес, вывод на который, не разрешается"
            },
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64"
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платежной системы",
              "format": "int64"
            },
            "reason": {
              "type": "string",
              "description": "Причина добавления адреса в стоп-лист",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание стоп-адреса"
        },
        "CreateSystemNotificationSetting2": {
          "required": [
            "chatId",
            "notificationType"
          ],
          "type": "object",
          "properties": {
            "chatId": {
              "minLength": 1,
              "type": "string",
              "description": "Идентификатор чата в Редди"
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemNotificationType2"
                }
              ],
              "description": "Тип системного уведомления"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание настройки системной нотификации"
        },
        "CreateTariff2": {
          "required": [
            "depositFixedFeeUsd",
            "depositPercentFee",
            "minDepositFixedFeeUsd",
            "minWithdrawalFixedFeeUsd",
            "name",
            "withdrawalFixedFeeUsd",
            "withdrawalPercentFee"
          ],
          "type": "object",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Наименование тарифа"
            },
            "minDepositFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за депозит в USD",
              "format": "decimal"
            },
            "depositFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за депозит в USD",
              "format": "decimal"
            },
            "depositPercentFee": {
              "type": "number",
              "description": "Процент комиссии за депозит",
              "format": "decimal"
            },
            "minWithdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за вывод в USD",
              "format": "decimal"
            },
            "withdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за вывод в USD",
              "format": "decimal"
            },
            "withdrawalPercentFee": {
              "type": "number",
              "description": "Процент комиссии за вывод",
              "format": "decimal"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание тарифа"
        },
        "CreateTransportCurrency2": {
          "required": [
            "contract",
            "currencyId",
            "maximalDepositAmount",
            "minimalDepositAmount",
            "minimalWithdrawalAmount",
            "precision",
            "transportProtocolId"
          ],
          "type": "object",
          "properties": {
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64"
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспорта",
              "format": "int64"
            },
            "contract": {
              "minLength": 1,
              "type": "string",
              "description": "Контракт соответствующей валюты на указанном транспорте"
            },
            "minimalDepositAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма депозита",
              "format": "decimal"
            },
            "minimalWithdrawalAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма вывода",
              "format": "decimal"
            },
            "maximalDepositAmount": {
              "type": "number",
              "format": "decimal"
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32"
            }
          },
          "additionalProperties": false,
          "description": "Запрос на создание транспортной валюты"
        },
        "CreateTransportProtocol2": {
          "required": [
            "addressRegex",
            "name",
            "native",
            "paymentSystemId"
          ],
          "type": "object",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string",
              "description": "Название транспортного протокола"
            },
            "paymentSystemId": {
              "type": "integer",
              "format": "int64"
            },
            "addressRegex": {
              "minLength": 1,
              "type": "string",
              "description": "Регулярное выражение для проверки адреса"
            },
            "native": {
              "type": "boolean",
              "description": "Флаг признака нативного транспорта"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на создание транспортного протокола"
        },
        "CurrencyDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "shortName": {
              "type": "string",
              "description": "Короткое имя валюты",
              "nullable": true
            },
            "fullName": {
              "type": "string",
              "description": "Полное имя валюты",
              "nullable": true
            },
            "type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CurrencyType2"
                }
              ],
              "description": "Тип валюты"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные валюты, обработку которой поддерживает система"
        },
        "CurrencyType2": {
          "enum": [
            "Coin",
            "Stablecoin",
            "LiquidToken",
            "NonLiquidToken",
            "Fiat"
          ],
          "type": "string",
          "description": "Тип валюты"
        },
        "DepositDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "instrumentId": {
              "type": "integer",
              "description": "Идентификатор инструмента клиента",
              "format": "int64"
            },
            "agentStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAgentStatus2"
                }
              ],
              "description": "Статус транзакции в Агенте"
            },
            "coinGatewayStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionCoinGatewayStatus2"
                }
              ],
              "description": "Статус транзакции в платёжном шлюзе монеты"
            },
            "amount": {
              "type": "number",
              "description": "Сумма депозита",
              "format": "decimal"
            },
            "antifraudInfoId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "foreignId": {
              "type": "string",
              "description": "Платежные реквизиты, соответствующие данному депозиту",
              "nullable": true
            },
            "hashKey": {
              "type": "string",
              "description": "Уникальный хэш-ключ данного депозита",
              "nullable": true
            },
            "recipient": {
              "type": "string",
              "description": "Адрес-получатель данного депозита",
              "nullable": true
            },
            "sender": {
              "type": "string",
              "description": "Адрес-отправитель данного депозита",
              "nullable": true
            },
            "payload": {
              "type": "string",
              "description": "Полезная нагрузка/сообщение",
              "nullable": true
            },
            "txApproach": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionApproach2"
                }
              ],
              "description": "Подход к выполнению транзакции"
            },
            "txHash": {
              "type": "string",
              "description": "Хэш транзакции",
              "nullable": true
            },
            "balanceStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionBalanceStatus2"
                }
              ],
              "description": "Статус транзакции для клиента"
            },
            "coindbId": {
              "type": "integer",
              "description": "Идентификатор депозита в БД монетного шлюза",
              "format": "int64"
            },
            "confirmations": {
              "type": "integer",
              "description": "Количество конфирмаций",
              "format": "int32"
            },
            "errorDescription": {
              "type": "string",
              "description": "Описание",
              "nullable": true
            },
            "txOwner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Принадлежность операции"
            },
            "refundId": {
              "type": "integer",
              "description": "Идентификатор рефанда",
              "format": "int64",
              "nullable": true
            },
            "clientDepositId": {
              "type": "string",
              "description": "Идентификатор депозита во внешней системе",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "transportCurrencyName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "clientId": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "businessChecks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BusinessCheckDto2"
              },
              "nullable": true
            },
            "antifraudInfo": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AntifraudInfoDto2"
                }
              ],
              "description": "Антифрод информация операций",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные транзакции депозита по конкретному инструменту"
        },
        "EditBackupSetting2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64",
              "nullable": true
            },
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64",
              "nullable": true
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64",
              "nullable": true
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платёжной системы",
              "format": "int64",
              "nullable": true
            },
            "fileNamePrefix": {
              "type": "string",
              "description": "Префикс в наименовании файла",
              "nullable": true
            },
            "maximumDelayInHours": {
              "type": "integer",
              "description": "Максимальная задержка в часах",
              "format": "int32",
              "nullable": true
            },
            "storageContainerName": {
              "type": "string",
              "description": "Наименование хранилища",
              "nullable": true
            },
            "checkBackupIsValid": {
              "type": "boolean",
              "description": "Признак актуальности бэкапа",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса редактирования настроек бэкапа"
        },
        "EditBlockchain2": {
          "required": [
            "coinServiceBaseContourUrl",
            "coinServiceCacheInformationUrl",
            "coinServiceDepositContourUrl",
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование",
              "nullable": true
            },
            "coinServiceName": {
              "type": "string",
              "description": "Имя сервиса, чтобы не путаться",
              "nullable": true
            },
            "blockchainCurrencyId": {
              "type": "integer",
              "description": "Идентификатор базовой валюты блокчейна",
              "format": "int64",
              "nullable": true
            },
            "confirmations": {
              "type": "integer",
              "description": "Требуемое количество конфирмаций любой валюты, работающей на данном блокчейне",
              "format": "int32",
              "nullable": true
            },
            "explorerTxInfoUrl": {
              "type": "string",
              "nullable": true
            },
            "explorerTxByAddressUrl": {
              "type": "string",
              "nullable": true
            },
            "coinServiceProcessingUrl": {
              "type": "string",
              "description": "URL эндпоинта с общими методами сервиса (выдача депозитных реквизитов)",
              "nullable": true
            },
            "coinServiceAdministrationUrl": {
              "type": "string",
              "description": "URL эндпоинта с административными методами сервиса",
              "nullable": true
            },
            "coinServiceBaseContourUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с базовыми контурами"
            },
            "coinServiceDepositContourUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с депозитными контурами"
            },
            "coinServiceCacheInformationUrl": {
              "minLength": 1,
              "type": "string",
              "description": "URL эндпойнта с информацией о кеше"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на изменение блокчейна"
        },
        "EditCacheInfoRequest2": {
          "required": [
            "transportCurrencyId"
          ],
          "type": "object",
          "properties": {
            "transportCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты на транспорте",
              "format": "int64"
            },
            "enabled": {
              "type": "boolean",
              "description": "Включение/выключение состояния сканирования сети",
              "nullable": true
            },
            "assetId": {
              "type": "string",
              "description": "Идентификатор состояния сканирования сети",
              "nullable": true
            },
            "lastSyncedBlockIndex": {
              "type": "integer",
              "description": "Индекс последнего просканированного блока",
              "format": "int64",
              "nullable": true
            },
            "iterationDelay": {
              "type": "string",
              "description": "Период сканирования",
              "format": "[-][d.]hh:mm:ss",
              "nullable": true
            },
            "failedDelay": {
              "type": "string",
              "description": "Период задержки при ошибке",
              "format": "[-][d.]hh:mm:ss",
              "nullable": true
            },
            "blockPool": {
              "type": "integer",
              "description": "Число блоков, обрабатываемых за одну итерацию сканирования",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Запрос на редактирование состояния сканирования сети."
        },
        "EditClient2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "description": {
              "type": "string",
              "description": "Необязательное описание",
              "nullable": true
            },
            "isBlocked": {
              "type": "boolean",
              "description": "Флаг блокировки клиента",
              "nullable": true
            },
            "tariffId": {
              "type": "integer",
              "description": "Идентификатор тарифа",
              "format": "int64",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование клиента"
        },
        "EditClientNotificationAddress2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "address": {
              "type": "string",
              "description": "Адрес нотификации",
              "nullable": true
            },
            "notificationChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationChannel2"
                }
              ],
              "description": "Канал нотификации",
              "nullable": true
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationType2"
                }
              ],
              "description": "Тип нотификации",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование адреса оповещения"
        },
        "EditCurrency2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "shortName": {
              "type": "string",
              "description": "Короткое имя валюты",
              "nullable": true
            },
            "fullName": {
              "type": "string",
              "description": "Полное имя валюты",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование валюты"
        },
        "EditDeposit2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "instrumentId": {
              "type": "integer",
              "description": "Идентификатор инструмента клиента",
              "format": "int64",
              "nullable": true
            },
            "agentStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAgentStatus2"
                }
              ],
              "description": "Агентский статус обработки депозита",
              "nullable": true
            },
            "coinGatewayStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionCoinGatewayStatus2"
                }
              ],
              "description": "Статус депозита на платежном шлюзе",
              "nullable": true
            },
            "amount": {
              "type": "number",
              "description": "Сумма депозита",
              "format": "decimal",
              "nullable": true
            },
            "antifraudInfoId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "foreignId": {
              "type": "string",
              "description": "Платежные реквизиты, соответствующие данному депозиту",
              "nullable": true
            },
            "hashKey": {
              "type": "string",
              "description": "Уникальный хэш-ключ данного депозита",
              "nullable": true
            },
            "recipient": {
              "type": "string",
              "description": "Адрес-получатель данного депозита",
              "nullable": true
            },
            "sender": {
              "type": "string",
              "description": "Адрес-отправитель данного депозита",
              "nullable": true
            },
            "payload": {
              "type": "string",
              "description": "Полезная нагрузка/сообщение",
              "nullable": true
            },
            "txApproach": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionApproach2"
                }
              ],
              "description": "Идентификатор пути, которым был обработан данный депозит",
              "nullable": true
            },
            "txHash": {
              "type": "string",
              "description": "Хэш транзакции",
              "nullable": true
            },
            "balanceStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionBalanceStatus2"
                }
              ],
              "description": "Статус депозита в системе клиента",
              "nullable": true
            },
            "coindbId": {
              "type": "integer",
              "description": "Идентификатор депозита в БД монетного шлюза",
              "format": "int64",
              "nullable": true
            },
            "confirmations": {
              "type": "integer",
              "description": "Количество конфирмаций",
              "format": "int32",
              "nullable": true
            },
            "errorDescription": {
              "type": "string",
              "description": "Описание",
              "nullable": true
            },
            "txOwner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Владелец транзакции",
              "nullable": true
            },
            "refundId": {
              "type": "integer",
              "description": "Идентификатор рефанда",
              "format": "int64",
              "nullable": true
            },
            "clientDepositId": {
              "type": "string",
              "description": "Идентификатор депозита во внешней системе",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование депозита"
        },
        "EditInstrument2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "transportCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты на транспорте",
              "format": "int64",
              "nullable": true
            },
            "clientId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "commercialFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания коммерческой комиссии по инструменту",
              "format": "int64",
              "nullable": true
            },
            "technicalFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания технической комиссии по инструменту",
              "format": "int64",
              "nullable": true
            },
            "hiddenForClient": {
              "type": "boolean",
              "description": "Скрыт для отображения в интерфейсе для клиента",
              "nullable": true
            },
            "availableForClient": {
              "type": "boolean",
              "description": "Доступен для клиента",
              "nullable": true
            },
            "systemIdentifierValue": {
              "type": "string",
              "nullable": true
            },
            "systemIdentifierСomment": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование инструмента"
        },
        "EditOrganization2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Наименование организации",
              "nullable": true
            },
            "twoFactorChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TwoFactorChannel2"
                }
              ],
              "description": "Канал для двухфакторной аутентификации в системе",
              "nullable": true
            },
            "isBlocked": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование организации"
        },
        "EditRefundToken2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "contract": {
              "type": "string",
              "description": "Адрес смарт-контракта",
              "nullable": true
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32",
              "nullable": true
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование рефанд токена"
        },
        "EditStopAddress2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "reason": {
              "type": "string",
              "description": "Причина добавления адреса в стоп-лист",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование стоп-адреса"
        },
        "EditSystemNotificationSetting2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "chatId": {
              "type": "string",
              "description": "Идентификатор чата в Редди",
              "nullable": true
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemNotificationType2"
                }
              ],
              "description": "Тип уведомления",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование настройки системной нотификации"
        },
        "EditSystemSettings2": {
          "required": [
            "description",
            "id",
            "value"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "value": {
              "minLength": 1,
              "type": "string",
              "description": "Значение настройки"
            },
            "description": {
              "minLength": 1,
              "type": "string",
              "description": "Описание настройки"
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на изменение системной настройки"
        },
        "EditTariff2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Наименование тарифа",
              "nullable": true
            },
            "minDepositFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за депозит в USD",
              "format": "decimal",
              "nullable": true
            },
            "depositFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за депозит в USD",
              "format": "decimal",
              "nullable": true
            },
            "depositPercentFee": {
              "type": "number",
              "description": "Процент комиссии за депозит",
              "format": "decimal",
              "nullable": true
            },
            "minWithdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за вывод в USD",
              "format": "decimal",
              "nullable": true
            },
            "withdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за вывод в USD",
              "format": "decimal",
              "nullable": true
            },
            "withdrawalPercentFee": {
              "type": "number",
              "description": "Процент комиссии за вывод",
              "format": "decimal",
              "nullable": true
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TariffStatus2"
                }
              ],
              "description": "Статус тарифа",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на изменение тарифа"
        },
        "EditTransportCurrency2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64",
              "nullable": true
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспорта",
              "format": "int64",
              "nullable": true
            },
            "contract": {
              "type": "string",
              "description": "Контракт соответствующей валюты на указанном транспорте",
              "nullable": true
            },
            "minimalDepositAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма депозита",
              "format": "decimal",
              "nullable": true
            },
            "minimalWithdrawalAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма вывода",
              "format": "decimal",
              "nullable": true
            },
            "maximalDepositAmount": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на изменение транспортной валюты"
        },
        "EditTransportProtocol2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "nullable": true
            },
            "paymentSystemId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "addressRegex": {
              "type": "string",
              "nullable": true
            },
            "native": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "EditWithdrawal2": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "instrumentId": {
              "type": "integer",
              "description": "Идентификатор инструмента клиента",
              "format": "int64",
              "nullable": true
            },
            "paymentOrderId": {
              "type": "string",
              "description": "Идентификатор заказа на вывод в системе клиента",
              "nullable": true
            },
            "address": {
              "type": "string",
              "description": "Адрес вывода",
              "nullable": true
            },
            "payload": {
              "type": "string",
              "description": "Полезная нагрузка",
              "nullable": true
            },
            "foreignId": {
              "type": "string",
              "description": "Внешний идентификатор, связанный с выводом.",
              "nullable": true
            },
            "agentStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAgentStatus2"
                }
              ],
              "description": "Агентский статус",
              "nullable": true
            },
            "amount": {
              "type": "number",
              "description": "Сумма вывода",
              "format": "decimal",
              "nullable": true
            },
            "antifraudInfoId": {
              "type": "integer",
              "description": "Идентификатор antifraud информации",
              "format": "int64",
              "nullable": true
            },
            "amlRiskGradeCreate": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAmlRiskGrade2"
                }
              ],
              "description": "Степень риска, выше которой деньги не должны быть использованы при формировании вывода, из справочника transactionAmlRiskGrade",
              "nullable": true
            },
            "creator": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WithdrawalCreatorType2"
                }
              ],
              "description": "Заказчик вывода",
              "nullable": true
            },
            "balanceStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionBalanceStatus2"
                }
              ],
              "description": "Статус вывода в системе клиента",
              "nullable": true
            },
            "txHash": {
              "type": "string",
              "description": "Хэш транзакции в блокчейне",
              "nullable": true
            },
            "coindbId": {
              "type": "integer",
              "description": "Идентификатор вывода в БД монетного шлюза",
              "format": "int64",
              "nullable": true
            },
            "coinGatewayStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionCoinGatewayStatus2"
                }
              ],
              "description": "Статус транзакции в платёжном шлюзе монеты"
            },
            "confirmations": {
              "type": "integer",
              "description": "Количество конфирмаций у транзакции",
              "format": "int32",
              "nullable": true
            },
            "errorDescription": {
              "type": "string",
              "description": "Описание",
              "nullable": true
            },
            "txApproach": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionApproach2"
                }
              ],
              "description": "Путь, которым был обработан вывод",
              "nullable": true
            },
            "txOwner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Владелец транзакции",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель запроса на редактирование вывода"
        },
        "EntityType2": {
          "enum": [
            "All",
            "PaymentSystem",
            "TransportProtocol",
            "Currency",
            "TransportCurrency",
            "Instrument",
            "Client"
          ],
          "type": "string",
          "description": "Тип сущности"
        },
        "EnumEntry2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID элемента",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "description": "Имя элемента",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Запись энумирации"
        },
        "Error2": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Код ошибки",
              "nullable": true
            },
            "message": {
              "type": "string",
              "description": "Сообщение",
              "nullable": true
            },
            "headerErrors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HeaderError2"
              },
              "description": "Список ошибок в заголовках запроса",
              "nullable": true
            },
            "paramErrors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ParamError2"
              },
              "description": "Список ошибок в параметрах запроса",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Информация об ошибке"
        },
        "HeaderError2": {
          "type": "object",
          "properties": {
            "headerName": {
              "type": "string",
              "description": "Наименование заголовка",
              "nullable": true
            },
            "code": {
              "type": "string",
              "description": "Код ошибки заголовка",
              "nullable": true
            },
            "message": {
              "type": "string",
              "description": "Сообщение",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Ошибка заголовка запроса"
        },
        "InfoBackupSettingDto2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64",
              "nullable": true
            },
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64",
              "nullable": true
            },
            "currencyName": {
              "type": "string",
              "description": "Полное имя валюты",
              "nullable": true
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64",
              "nullable": true
            },
            "transportProtocolName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "checkBackupIsValid": {
              "type": "boolean",
              "description": "Признак актуальности бэкапа"
            },
            "fileNamePrefix": {
              "type": "string",
              "description": "Префикс в наименовании файла",
              "nullable": true
            },
            "lastBackup": {
              "type": "string",
              "description": "Дата последнего бэкапа",
              "format": "date-time",
              "nullable": true
            },
            "maximumDelayInHours": {
              "type": "integer",
              "description": "Максимальная задержка в часах",
              "format": "int32"
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платёжной системы",
              "format": "int64",
              "nullable": true
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование",
              "nullable": true
            },
            "storageContainerName": {
              "type": "string",
              "description": "Наименование хранилища",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Настройки бэкапа ключевой информации"
        },
        "InstrumentDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "clientId": {
              "type": "integer",
              "format": "int64"
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "transportCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты на транспорте",
              "format": "int64"
            },
            "commercialFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания коммерческой комиссии по инструменту",
              "format": "int64"
            },
            "technicalFeeCurrencyId": {
              "type": "integer",
              "description": "Идентификатор валюты для взимания технической комиссии по инструменту",
              "format": "int64"
            },
            "hiddenForClient": {
              "type": "boolean",
              "description": "Скрыт для отображения в интерфейсе для клиента"
            },
            "availableForClient": {
              "type": "boolean",
              "description": "Доступен для клиента"
            },
            "currencyTransportName": {
              "type": "string",
              "description": "Короткое имя валюты",
              "nullable": true
            },
            "physicalBalance": {
              "type": "number",
              "description": "Баланс инструмента",
              "format": "decimal",
              "nullable": true
            },
            "clientVirtualBalance": {
              "type": "number",
              "description": "Клиентский баланс инструмента",
              "format": "decimal",
              "nullable": true
            },
            "systemVirtualBalance": {
              "type": "number",
              "description": "Системный баланс инструмента",
              "format": "decimal",
              "nullable": true
            },
            "systemIdentifierValue": {
              "type": "string",
              "description": "Значение системной метки сервисных платежей",
              "nullable": true
            },
            "systemIdentifierСomment": {
              "type": "string",
              "description": "Комментарий",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные конкретной валюты на транспорте, которая включена в процессинг платежей конкретного клиента."
        },
        "InstrumentListDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/ListDto2"
            }
          ],
          "properties": {
            "currencyTransportName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Краткая модель сущности"
        },
        "ListDto2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID сущности",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Наименование тарифа",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Краткая модель сущности"
        },
        "NotImplementedRequest2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false,
          "description": "Запрос не имплементирован. Вызов приведет к ошибке."
        },
        "NotificationChannel2": {
          "enum": [
            "Reddy",
            "Email"
          ],
          "type": "string",
          "description": "Канал уведомления"
        },
        "NotificationType2": {
          "enum": [
            "ClientCurrenciesBalances",
            "ClientCurrenciesLessMinBalances"
          ],
          "type": "string",
          "description": "Тип уведомления"
        },
        "OperationOwner2": {
          "enum": [
            "Client",
            "System",
            "All"
          ],
          "type": "string",
          "description": "Принадлежность операции"
        },
        "OperationRestrictionDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "entity": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EntityType2"
                }
              ],
              "description": "Тип сущности"
            },
            "entityId": {
              "type": "integer",
              "description": "Идентификатор экземпляра сущности",
              "format": "int64"
            },
            "operation": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationType2"
                }
              ],
              "description": "Тип операции"
            },
            "owner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Принадлежность операции"
            },
            "subType": {
              "type": "integer",
              "description": "Подтип операции",
              "format": "int32"
            },
            "reason": {
              "type": "string",
              "description": "Основание для ограничения",
              "nullable": true
            },
            "userLogin": {
              "type": "string",
              "description": "Логин сотрудника техподдержки, добавившего ограничение",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Запреты на операции"
        },
        "OperationType2": {
          "enum": [
            "All",
            "Deposit",
            "Withdrawal",
            "Service",
            "Refund"
          ],
          "type": "string",
          "description": "Тип операции"
        },
        "OrganizationDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Наименование организации",
              "nullable": true
            },
            "organizationKey": {
              "type": "string",
              "description": "Уникальный \"ключ\" организации",
              "nullable": true
            },
            "twoFactorChannel": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TwoFactorChannel2"
                }
              ],
              "description": "Канал двухфакторной аутентификации"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "isBlocked": {
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные организации."
        },
        "PagedResult[BlockchainDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlockchainDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[ClientDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClientDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[ClientNotificationAddressDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClientNotificationAddressDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[CurrencyDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CurrencyDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[DepositDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DepositDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[InfoBackupSettingDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InfoBackupSettingDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[InstrumentDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InstrumentDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[OperationRestrictionDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OperationRestrictionDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[OrganizationDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrganizationDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[RefundDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RefundDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[RefundTokenDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RefundTokenDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[SystemNotificationSettingDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SystemNotificationSettingDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[SystemSettingDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SystemSettingDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[TariffDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TariffDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[TransportCurrencyDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransportCurrencyDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[TransportProtocolDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransportProtocolDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[WithdrawalDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WithdrawalDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PagedResult[WithdrawalStopAddressDto]": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "totalItems": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WithdrawalStopAddressDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ParamError2": {
          "type": "object",
          "properties": {
            "paramName": {
              "type": "string",
              "description": "Наименование параметра",
              "nullable": true
            },
            "code": {
              "type": "string",
              "description": "Код ошибки параметра",
              "nullable": true
            },
            "message": {
              "type": "string",
              "description": "Сообщение",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Ошибка параметра запроса"
        },
        "RefundDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "refundTokenName": {
              "type": "string",
              "nullable": true
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "refundTokenId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "instrumentId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "address": {
              "type": "string",
              "description": "Адрес рефанда",
              "nullable": true
            },
            "amount": {
              "type": "number",
              "format": "decimal",
              "nullable": true
            },
            "agentStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAgentStatus2"
                }
              ],
              "description": "Статус транзакции в Агенте"
            },
            "coindbId": {
              "type": "integer",
              "description": "Идентификатор рефанда в БД монетного шлюза",
              "format": "int64",
              "nullable": true
            },
            "coinGatewayStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionCoinGatewayStatus2"
                }
              ],
              "description": "Статус транзакции в платёжном шлюзе монеты"
            },
            "confirmations": {
              "type": "integer",
              "description": "Количество конфирмаций у транзакции",
              "format": "int32",
              "nullable": true
            },
            "errorDescription": {
              "type": "string",
              "description": "Описание",
              "nullable": true
            },
            "txHash": {
              "type": "string",
              "description": "Хэш транзакции",
              "nullable": true
            },
            "payload": {
              "type": "string",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "txType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RefundType2"
                }
              ],
              "description": "Тип рефанда"
            },
            "clientId": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "depositAddress": {
              "type": "string",
              "description": "Адрес депозита для рефанда",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Рефанды"
        },
        "RefundTokenDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "contract": {
              "type": "string",
              "description": "Адрес смарт-контракта",
              "nullable": true
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32"
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспортного протокола",
              "format": "int64"
            },
            "transportProtocolName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "RefundType2": {
          "enum": [
            "SupportedCurrency",
            "UnsupportedToken"
          ],
          "type": "string",
          "description": "Тип рефанда"
        },
        "RequisiteResponse2": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "description": "Адрес",
              "nullable": true
            },
            "tag": {
              "type": "string",
              "description": "Тег",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Модель ответа на получение реквизитов."
        },
        "SortType2": {
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        },
        "SystemNotificationSettingDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "chatId": {
              "type": "string",
              "nullable": true
            },
            "dtCreated": {
              "type": "string",
              "format": "date-time"
            },
            "notificationType": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SystemNotificationType2"
                }
              ],
              "description": "Тип системного уведомления"
            },
            "dtUpdated": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SystemNotificationType2": {
          "enum": [
            "Security",
            "SuspiciousDeposit",
            "SuspiciousWithdrawal",
            "InstrumentBalance",
            "CoinGateway",
            "EntityInstance",
            "Callback"
          ],
          "type": "string",
          "description": "Тип системного уведомления"
        },
        "SystemSettingDto2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "code": {
              "type": "string",
              "description": "Код настройки",
              "nullable": true
            },
            "value": {
              "type": "string",
              "description": "Значение настройки",
              "nullable": true
            },
            "description": {
              "type": "string",
              "description": "Описание настройки",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные настроек системы."
        },
        "TData2": {
          "type": "object",
          "additionalProperties": false
        },
        "TariffDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Наименование тарифа",
              "nullable": true
            },
            "minDepositFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за депозит в USD",
              "format": "decimal"
            },
            "depositFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за депозит в USD",
              "format": "decimal"
            },
            "depositPercentFee": {
              "type": "number",
              "description": "Процент комиссии за депозит",
              "format": "decimal"
            },
            "minWithdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Минимальная фиксированная сумма за вывод в USD",
              "format": "decimal"
            },
            "withdrawalFixedFeeUsd": {
              "type": "number",
              "description": "Фиксированная комиссия за вывод в USD",
              "format": "decimal"
            },
            "withdrawalPercentFee": {
              "type": "number",
              "description": "Процент комиссии за вывод",
              "format": "decimal"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TariffStatus2"
                }
              ],
              "description": "Статус тарифа",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные тарифа."
        },
        "TariffStatus2": {
          "enum": [
            "Active",
            "Inactive",
            "WrongSignature"
          ],
          "type": "string",
          "description": "Статус тарифа"
        },
        "TransactionAgentStatus2": {
          "enum": [
            "Pending",
            "Failed",
            "Success",
            "ManualProcessingBO",
            "ManualProcessingTS",
            "Refunded",
            "WrongSignature",
            "Registered",
            "ForRefund"
          ],
          "type": "string",
          "description": "Статус транзакции в Агенте"
        },
        "TransactionAmlRiskGrade2": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Severe"
          ],
          "type": "string",
          "description": "Степень риска транзакции"
        },
        "TransactionApproach2": {
          "enum": [
            "Blockchain",
            "Internal"
          ],
          "type": "string",
          "description": "Подход к выполнению транзакции"
        },
        "TransactionBalanceStatus2": {
          "enum": [
            "Pending",
            "Failed",
            "Success",
            "SuccessButWaitingTransferToBalance",
            "Registered",
            "ApprovalRequired",
            "Refunded"
          ],
          "type": "string",
          "description": "Статус транзакции для клиента"
        },
        "TransactionCoinGatewayStatus2": {
          "enum": [
            "NotStarted",
            "Pending",
            "SuccessButWaitingTransferToBalance",
            "Success",
            "Failed",
            "SuccessButNotApproved"
          ],
          "type": "string",
          "description": "Статус транзакции в платёжном шлюзе монеты"
        },
        "TransportCurrencyDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "currencyId": {
              "type": "integer",
              "description": "Идентификатор валюты",
              "format": "int64"
            },
            "currencyName": {
              "type": "string",
              "description": "Полное имя валюты",
              "nullable": true
            },
            "transportProtocolId": {
              "type": "integer",
              "description": "Идентификатор транспорта",
              "format": "int64"
            },
            "transportProtocolName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "contract": {
              "type": "string",
              "description": "Контракт соответствующей валюты на указанном транспорте",
              "nullable": true
            },
            "minimalDepositAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма депозита",
              "format": "decimal"
            },
            "minimalWithdrawalAmount": {
              "type": "number",
              "description": "Минимально допустимая сумма вывода",
              "format": "decimal"
            },
            "maximalDepositAmount": {
              "type": "number",
              "format": "decimal"
            },
            "precision": {
              "type": "integer",
              "description": "Количество знаков после запятой",
              "format": "int32"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные валюты, которая работает на конкретном транспортном протоколе."
        },
        "TransportCurrencyListDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/ListDto2"
            }
          ],
          "properties": {
            "currencyName": {
              "type": "string",
              "description": "Короткое имя валюты",
              "nullable": true
            },
            "transportName": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Краткая модель сущности"
        },
        "TransportProtocolDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "name": {
              "type": "string",
              "description": "Название транспортного протокола",
              "nullable": true
            },
            "paymentSystemId": {
              "type": "integer",
              "format": "int64"
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование",
              "nullable": true
            },
            "native": {
              "type": "boolean",
              "description": "Флаг признака нативного транспорта"
            },
            "addressRegex": {
              "type": "string",
              "description": "Регулярное выражение для проверки адреса",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные транспортного протокола, обработку которого поддерживает система."
        },
        "TwoFactorChannel2": {
          "enum": [
            "Reddy",
            "GoogleAuthenticator"
          ],
          "type": "string",
          "description": "Канал двухфакторной аутентификации"
        },
        "WithdrawalCreatorType2": {
          "enum": [
            "Unknown",
            "User",
            "FinancialDepartment",
            "Partner"
          ],
          "type": "string",
          "description": "Тип заказчика вывода"
        },
        "WithdrawalDto2": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseSignedDto2"
            }
          ],
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "instrumentId": {
              "type": "integer",
              "description": "Идентификатор инструмента клиента",
              "format": "int64"
            },
            "paymentOrderId": {
              "type": "string",
              "description": "Идентификатор заказа на вывод в системе клиента",
              "nullable": true
            },
            "address": {
              "type": "string",
              "description": "Адрес вывода",
              "nullable": true
            },
            "payload": {
              "type": "string",
              "description": "Полезная нагрузка",
              "nullable": true
            },
            "foreignId": {
              "type": "string",
              "description": "Внешний идентификатор, связанный с выводом.",
              "nullable": true
            },
            "agentStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAgentStatus2"
                }
              ],
              "description": "Статус транзакции в Агенте"
            },
            "amount": {
              "type": "number",
              "description": "Сумма вывода",
              "format": "decimal"
            },
            "antifraudInfoId": {
              "type": "integer",
              "description": "Идентификатор antifraud информации",
              "format": "int64",
              "nullable": true
            },
            "amlRiskGradeCreate": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionAmlRiskGrade2"
                }
              ],
              "description": "Степень риска, выше которой деньги не должны быть использованы при формировании вывода, из справочника transactionAmlRiskGrade",
              "nullable": true
            },
            "creator": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WithdrawalCreatorType2"
                }
              ],
              "description": "Заказчик вывода",
              "nullable": true
            },
            "balanceStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionBalanceStatus2"
                }
              ],
              "description": "Статус транзакции для клиента"
            },
            "txHash": {
              "type": "string",
              "description": "Хэш транзакции в блокчейне",
              "nullable": true
            },
            "coindbId": {
              "type": "integer",
              "description": "Идентификатор вывода в БД монетного шлюза",
              "format": "int64",
              "nullable": true
            },
            "coinGatewayStatus": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionCoinGatewayStatus2"
                }
              ],
              "description": "Статус транзакции в платёжном шлюзе монеты"
            },
            "confirmations": {
              "type": "integer",
              "description": "Количество конфирмаций у транзакции",
              "format": "int32",
              "nullable": true
            },
            "errorDescription": {
              "type": "string",
              "description": "Описание",
              "nullable": true
            },
            "txApproach": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TransactionApproach2"
                }
              ],
              "description": "Путь, которым был обработан вывод",
              "nullable": true
            },
            "txOwner": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OperationOwner2"
                }
              ],
              "description": "Принадлежность операции"
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "transportCurrencyName": {
              "type": "string",
              "description": "Имя транспортной валюты",
              "nullable": true
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "antifraudInfo": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AntifraudInfoDto2"
                }
              ],
              "description": "Антифрод информация операций",
              "nullable": true
            },
            "businessChecks": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BusinessCheckDto2"
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Содержит данные транзакции вывода по конкретному инструменту."
        },
        "WithdrawalStopAddressDto2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "PK",
              "format": "int64"
            },
            "clientId": {
              "type": "integer",
              "description": "Идентификатор клиента",
              "format": "int64"
            },
            "clientName": {
              "type": "string",
              "description": "Имя клиента",
              "nullable": true
            },
            "dtCreated": {
              "type": "string",
              "description": "Дата создания записи",
              "format": "date-time"
            },
            "paymentSystemId": {
              "type": "integer",
              "description": "Идентификатор платежной системы",
              "format": "int64"
            },
            "paymentSystemName": {
              "type": "string",
              "description": "Наименование",
              "nullable": true
            },
            "reason": {
              "type": "string",
              "description": "Причина добавления адреса в стоп-лист",
              "nullable": true
            },
            "dtUpdated": {
              "type": "string",
              "description": "Дата последнего обновления записи",
              "format": "date-time",
              "nullable": true
            },
            "address": {
              "type": "string",
              "description": "Адрес, вывод на который, не разрешается",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "description": "Стоп адреса выводов, на которые требуется запрещать делать выводы"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "apiKey",
          "description": "JWT Authorization Token",
          "name": "Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "Bearer": [ ]
      }
    ]
  }